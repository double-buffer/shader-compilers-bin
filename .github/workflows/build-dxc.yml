name: Build-DXC

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      architecture:
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ inputs.platform }}-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Get Tag name
      working-directory: ./src/DirectXShaderCompiler
      run: echo "CURRENT_TAG=$(git describe --tags)" >> $GITHUB_ENV

    - name: Install Dependencies MacOS
      if: inputs.platform == 'macos'
      run: |
        brew update
        brew install ninja

    # TODO: Use sub workflows per compilers
    # - name: Build DirectX Shader Compiler
    #   working-directory: ./src/DirectXShaderCompiler
    #   run: | 
    #     cmake -B build -G Ninja . -C ./cmake/caches/PredefinedParams.cmake -DSC_ARCH_NAME=${{ inputs.architecture }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS=-Werror
    #     ninja -C build

  #       cp ./build/bin/dxc ./publish/bin/
  #       cp ./build/lib/libdxcompiler.dylib ./publish/lib/
    - name: Copy Files
      working-directory: ./src/DirectXShaderCompiler
      run: |
        mkdir ./publish/
        mkdir ./publish/bin/
        mkdir ./publish/lib/
        mkdir ./publish/include/
        mkdir ./publish/include/dxc/

        cp ./include/dxc/WinAdapter.h ./publish/include/dxc/
        cp ./include/dxc/dxcisense.h ./publish/include/dxc/
        cp ./include/dxc/dxcerrors.h ./publish/include/dxc/
        cp ./include/dxc/dxcapi.h ./publish/include/dxc/
        cp ./LICENSE.TXT ./publish/

    - name: Zip Binaries
      run: |
        mkdir ./publish/
        zip ./publish/${{ inputs.platform }}_dxc_${{ env.CURRENT_TAG }}_${{ inputs.architecture }}.zip ./src/DirectXShaderCompiler/publish/* -r

    - name: Upload Binaries
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.platform }}_dxc_${{ env.CURRENT_TAG }}_${{ inputs.architecture }}
        path: ./publish